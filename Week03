# This program reads the data from the tv_life.csv file 
#     Each line has 
#      Country, Life expectancy, People/TV, People/physician, 
#               Female life expectancy, Male life expectancy
# It stores the items in each line in a dictionary whose keys represent the column names.
#     It print the information for each country.
# It uses a try/except statement to catch errors in the file or numerical conversions.
#
# It describes the field 'life' by printing the max, min and average values.

import csv

infile = 'tv_life.csv'

# create new empty list
countryList = []

with open(infile, 'rU') as csvfile:
    # the csv file reader returns a list of the csv items on each line
    countryReader = csv.reader(csvfile,  dialect='excel', delimiter=',')

    # from each line, a list of row items, put each element in a dictionary
    #   with a key representing the data
    for line in countryReader:
      #skip lines without data, specific for each file to catch non-data lines
      if line[0] == '' or line[0].startswith('Televison') or line[0].startswith('SOURCE') \
              or line[0].startswith('Country'):
          continue
      else:
          try:
            # create a dictionary for each country
            country = {}
            # add each piece of data under a key representing that data
            country['name'] = line[0]
            country['life'] = line[1]
            country['people_tv'] = line[2]
            country['people_dr'] = line[3]
            country['femalelife'] = line[4]
            country['malelife'] = line[5]
    
            # add this countryto the list
            countryList.append(country)
          # catch errors in file formatting (number items per line)  and print an error message
          except IndexError:
            print ('Error: ', line)
csvfile.close()

print ("Read", len(countryList), "country data")


# explore values of a numeric field
fieldname = 'life'
# collect the values in this list as numbers
numberList = []
for num, country in enumerate(countryList):
    try: 
        #print(num, country['name'])   
        numberList.append (float(country[fieldname]))
    except ValueError:
        print ('Number conversion error on value', country[fieldname], 'at line', num, 'Min and max not valid')

# report the average, max and min values and the first ones
maxval = max(numberList)
#print(numberList.index(maxval))
maxname = countryList[numberList.index(maxval)]['name']
minval = min(numberList)
#print(numberList.index(minval))
minname = countryList[numberList.index(minval)]['name']
avg = sum(numberList) / len(numberList)
print( 'Field', fieldname, '(First) Maximum', maxval, 'at', maxname)
print( 'Field', fieldname, '(First) Minimum', minval, 'at', minname)
print( 'Field',  'Average', avg)







{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\vieww12000\viewh15840\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf0 Week 3-6: Loops and Numeric Summation\
\
Reading a csv file, evaluating data, finding max, min, and average.\
\
looping and breaking loops\

\f1\b0\fs22 \

\fs28 Program:  
\f0\b tvlife1.py\

\f1\b0\fs22 \

\fs28 # This program reads the data from the tv_life.csv file \
#     Each line has \
#      Country, Life expectancy, People/TV, People/physician, \
#               Female life expectancy, Male life expectancy\
# It stores the items in each line in a dictionary whose keys represent the column names.\
#     It print the information for each country.\
# It uses a try/except statement to catch errors in the file or numerical conversions.\
#\
# It describes the field 'life' by printing the max, min and average values.\
\
import csv\
\
infile = 'tv_life.csv'\
\
# create new empty list\
countryList = []\
\
with open(infile, 'rU') as csvfile:\
    # the csv file reader returns a list of the csv items on each line\
    countryReader = csv.reader(csvfile,  dialect='excel', delimiter=',')\
\
    # from each line, a list of row items, put each element in a dictionary\
    #   with a key representing the data\
    for line in countryReader:\
      # skip lines without data, specific for each file to catch non-data lines\
      if line[0] == '' or line[0].startswith('Televison') or line[0].startswith('SOURCE') \\\
              or line[0].startswith('Country'):\
          continue\
      else:\
          try:\
            # create a dictionary for each country\
            country = \{\}\
            # add each piece of data under a key representing that data\
            country['name'] = line[0]\
            country['life'] = line[1]\
            country['people_tv'] = line[2]\
            country['people_dr'] = line[3]\
            country['femalelife'] = line[4]\
            country['malelife'] = line[5]\
    \
            # add this countryto the list\
            countryList.append(country)\
          # catch errors in file formatting (number items per line)  and print an error message\
          except IndexError:\
            print ('Error: ', line)\
csvfile.close()\
\
print ("Read", len(countryList), "country data")\
\
\
# explore values of a numeric field\
fieldname = 'life'\
# collect the values in this list as numbers\
numberList = []\
for num, country in enumerate(countryList):\
    try: \
        #print(num, country['name'])   \
        numberList.append (float(country[fieldname]))\
    except ValueError:\
        print ('Number conversion error on value', country[fieldname], 'at line', num, 'Min and max not valid')\
\
# report the average, max and min values and the first ones\
maxval = max(numberList)\
#print(numberList.index(maxval))\
maxname = countryList[numberList.index(maxval)]['name']\
minval = min(numberList)\
#print(numberList.index(minval))\
minname = countryList[numberList.index(minval)]['name']\
avg = sum(numberList) / len(numberList)\
print( 'Field', fieldname, '(First) Maximum', maxval, 'at', maxname)\
print( 'Field', fieldname, '(First) Minimum', minval, 'at', minname)\
print( 'Field',  'Average', avg)\
\
\
\
\
\
\
\
}
"Televison, Physicians, and Life Expectancy",,,,,
,,,,,
Country,Life expectancy,People/TV,People/physician,Female life expectancy,Male life expectancy
,,,,,
Argentina,70.5,4,370,74,67
Bangladesh,53.5,315,6166,53,54
Brazil,65,4,684,68,62
Canada,76.5,1.7,449,80,73
China,70,8,643,72,68
Colombia,71,5.6,1551,74,68
Egypt,60.5,15,616,61,60
Ethiopia,51.5,503,36660,53,50
France,78,2.6,403,82,74
Germany,76,2.6,346,79,73
India,57.5,44,2471,58,57
Indonesia,61,24,7427,63,59
Iran,64.5,23,2992,65,64
Italy,78.5,3.8,233,82,75
Japan,79,1.8,609,82,76
Kenya,61,96,7615,63,59
"Korea, North",70,90,370,73,67
"Korea, South",70,4.9,1066,73,67
Mexico,72,6.6,600,76,68
Morocco,64.5,21,4873,66,63
Myanmar (Burma),54.5,592,3485,56,53
Pakistan,56.5,73,2364,57,56
Peru,64.5,14,1016,67,62
Philippines,64.5,8.8,1062,67,62
Poland,73,3.9,480,77,69
Romania,72,6,559,75,69
Russia,69,3.2,259,74,64
South Africa,64,11,1340,67,61
Spain,78.5,2.6,275,82,75
Sudan,53,23,12550,54,52
Taiwan,75,3.2,965,78,72
Tanzania,52.5,*,25229,55,50
Thailand,68.5,11,4883,71,66
Turkey,70,5,1189,72,68
Ukraine,70.5,3,226,75,66
United Kingdom,76,3,611,79,73
United States,75.5,1.3,404,79,72
Venezuela,74.5,5.6,576,78,71
Vietnam,65,29,3096,67,63
Zaire,54,*,23193,56,52
,,,,,
SOURCE:,"The World Almanac and Book of Facts 1993_ (1993), New York:  Pharos Books.",,,,
